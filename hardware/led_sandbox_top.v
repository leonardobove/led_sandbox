
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module led_sandbox_top (

	//////////// CLOCK //////////
	input 		          		MAX10_CLK1_50,



	//////////// KEY //////////
	//input 		     [1:0]		KEY,

	//////////// LED //////////
	//output		     [9:0]		LEDR,

	//////////// SW //////////
	//input 		     [9:0]		SW
	
	/////////// DRAM ////////
	output            DRAM_CLK,
	output            DRAM_CKE,
	output   [12: 0]  DRAM_ADDR,
	output   [ 1: 0]  DRAM_BA,
	inout    [15: 0]  DRAM_DQ,
	output            DRAM_LDQM,
	output            DRAM_UDQM,
	output            DRAM_CS_N,
	output            DRAM_WE_N,
	output            DRAM_CAS_N,
	output            DRAM_RAS_N,
	
	////////// ACCELEROMETER ///////
	input     [2:1]   GSENSOR_INT,
	output            GSENSOR_SCLK,
	output            GSENSOR_CS_N,	
	inout             GSENSOR_SDI
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================

	 
led_sandbox_sopc led_sandbox_system (
        .accelerometer_spi_I2C_SDAT      (GSENSOR_SDI),      // accelerometer_spi.I2C_SDAT
        .accelerometer_spi_I2C_SCLK      (GSENSOR_SCLK),      //                  .I2C_SCLK
        .accelerometer_spi_G_SENSOR_CS_N (GSENSOR_CS_N), //                  .G_SENSOR_CS_N
        .accelerometer_spi_G_SENSOR_INT  (GSENSOR_INT[1]),  //                  .G_SENSOR_INT
        .clk_clk                         (MAX10_CLK1_50),                         //               clk.clk
        .reset_reset_n                   (1'b1),                      //             reset.reset_n
        .sdram_wire_addr                 (DRAM_ADDR),                 //        sdram_wire.addr
        .sdram_wire_ba                   (DRAM_BA),                   //                  .ba
        .sdram_wire_cas_n                (DRAM_CAS_N),                //                  .cas_n
        .sdram_wire_cke                  (DRAM_CKE),                  //                  .cke
        .sdram_wire_cs_n                 (DRAM_CS_N),                 //                  .cs_n
        .sdram_wire_dq                   (DRAM_DQ),                   //                  .dq
        .sdram_wire_dqm                  ({DRAM_UDQM,DRAM_LDQM}),     //                  .dqm
        .sdram_wire_ras_n                (DRAM_RAS_N),                //                  .ras_n
        .sdram_wire_we_n                 (DRAM_WE_N),                 //                  .we_n
        .clk_sdram_clk                   (DRAM_CLK)                   //         clk_sdram.clk
    );
	 
endmodule

